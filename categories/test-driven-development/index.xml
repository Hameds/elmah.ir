<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Test Driven Development on elmah</title>
    <link>http://elmah.ir/categories/test-driven-development/</link>
    <description>Recent content in Test Driven Development on elmah</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fa-ir</language>
    <lastBuildDate>Sun, 11 Dec 2016 00:00:00 +0330</lastBuildDate>
    
	<atom:link href="http://elmah.ir/categories/test-driven-development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>۳۰ روز با TDD: روز هجدهم - بازبینی Refactoring قسمت اول</title>
      <link>http://elmah.ir/post/128-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D9%87%D8%AC%D8%AF%D9%87%D9%85---%D8%A8%D8%A7%D8%B2%D8%A8%DB%8C%D9%86%DB%8C-refactoring-%D9%82%D8%B3%D9%85%D8%AA-%D8%A7%D9%88%D9%84/</link>
      <pubDate>Sun, 11 Dec 2016 00:00:00 +0330</pubDate>
      
      <guid>http://elmah.ir/post/128-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D9%87%D8%AC%D8%AF%D9%87%D9%85---%D8%A8%D8%A7%D8%B2%D8%A8%DB%8C%D9%86%DB%8C-refactoring-%D9%82%D8%B3%D9%85%D8%AA-%D8%A7%D9%88%D9%84/</guid>
      <description>توجه: قبل از این نوشته، آزمون‌های واحد (Unit testها) مربوط به تغییرات PlaceOrder نوشته قبلی را از اینجا می‌توانید دانلود کنید.
در چند نوشته گذشته، متد PlaceOrder را از OrderService بیرون بردیم. برای مرور، متد فعلی این شکلی است:
 این متد کمی طولانی شده و همچنین داریم به محدوده نقض Single Responsibility Principel (برای مرور SRP روز پنجم را مطالعه کنید) وارد می‌شویم. در حال حاضر شش دلیل برای اینکه این متد باید تغییر کند شمردم:</description>
    </item>
    
    <item>
      <title>۳۰ روز با TDD: روز هفدهم-تعیین ترتیب اجرا در mock ها</title>
      <link>http://elmah.ir/post/122-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D9%87%D9%81%D8%AF%D9%87%D9%85-%D8%AA%D8%B9%DB%8C%DB%8C%D9%86-%D8%AA%D8%B1%D8%AA%DB%8C%D8%A8-%D8%A7%D8%AC%D8%B1%D8%A7-%D8%AF%D8%B1-mock-%D9%87%D8%A7/</link>
      <pubDate>Mon, 28 Dec 2015 00:00:00 +0330</pubDate>
      
      <guid>http://elmah.ir/post/122-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D9%87%D9%81%D8%AF%D9%87%D9%85-%D8%AA%D8%B9%DB%8C%DB%8C%D9%86-%D8%AA%D8%B1%D8%AA%DB%8C%D8%A8-%D8%A7%D8%AC%D8%B1%D8%A7-%D8%AF%D8%B1-mock-%D9%87%D8%A7/</guid>
      <description>امروز هم توسعه برنامه فروشگاهی که به روش TDD نوشتیم را با نگاهی نزدیک‌تر به سرویس Order Fulfillment که یک سرویس خارج از برنامه اصلی است، ادامه می‌دهیم.
ارسال سفارش
اگر نوشته قبلی را خوانده باشید، به یاد دارید که ما با یک سرویس خارج از برنامه اصلی برای اجرای سفارشات کار می‌کردیم. آن‌ها یک API فراهم کرده‌اند و ما OrderFulfillmentService را فراخوانی می‌کنیم. interface این API چندین فراخوانی و مجموعه‌ای از قوانین برای ترتیب فراخوانی‌ها دارد.</description>
    </item>
    
    <item>
      <title>۳۰ روز با TDD: روز شانزدهم- استفاده از پارامترهای مشخص در Stub ها</title>
      <link>http://elmah.ir/post/120-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D8%B4%D8%A7%D9%86%D8%B2%D8%AF%D9%87%D9%85--%D8%A7%D8%B3%D8%AA%D9%81%D8%A7%D8%AF%D9%87-%D8%A7%D8%B2-%D9%BE%D8%A7%D8%B1%D8%A7%D9%85%D8%AA%D8%B1%D9%87%D8%A7%DB%8C-%D9%85%D8%B4%D8%AE%D8%B5-%D8%AF%D8%B1-stub-%D9%87%D8%A7/</link>
      <pubDate>Mon, 14 Dec 2015 00:00:00 +0330</pubDate>
      
      <guid>http://elmah.ir/post/120-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D8%B4%D8%A7%D9%86%D8%B2%D8%AF%D9%87%D9%85--%D8%A7%D8%B3%D8%AA%D9%81%D8%A7%D8%AF%D9%87-%D8%A7%D8%B2-%D9%BE%D8%A7%D8%B1%D8%A7%D9%85%D8%AA%D8%B1%D9%87%D8%A7%DB%8C-%D9%85%D8%B4%D8%AE%D8%B5-%D8%AF%D8%B1-stub-%D9%87%D8%A7/</guid>
      <description>ما مثال چند نوشته قبلی این سری نوشته‌ها را پی خواهیم گرفت. نیازمندی نرم‌افزاری را در روز دوازدهم از Stub بیان کردیم. به عنوان بخشی از این نیازمندی، ما باید با یک سیستم ثبت سفارش خارجی ارتباط برقرار کنیم. تست کیس بعدی که می‌خواهم به آن بپردازم مربوط به همین ارتباط با سیستم خارجی ثبت سفارش است. به جای اینکه خودمان بخش ثبت سفارش را بنویسیم، مدیریت تصمیم گرفته که آن را برون‌سپاری (outsource) کنیم.</description>
    </item>
    
    <item>
      <title>۳۰ روز با TDD: روز پانزدهم - ساده همیشه به معنی واضح نیست قسمت دوم</title>
      <link>http://elmah.ir/post/114-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D9%BE%D8%A7%D9%86%D8%B2%D8%AF%D9%87%D9%85---%D8%B3%D8%A7%D8%AF%D9%87-%D9%87%D9%85%DB%8C%D8%B4%D9%87-%D8%A8%D9%87-%D9%85%D8%B9%D9%86%DB%8C-%D9%88%D8%A7%D8%B6%D8%AD-%D9%86%DB%8C%D8%B3%D8%AA-%D9%82%D8%B3%D9%85%D8%AA-%D8%AF%D9%88%D9%85/</link>
      <pubDate>Thu, 02 Apr 2015 00:00:00 +0330</pubDate>
      
      <guid>http://elmah.ir/post/114-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D9%BE%D8%A7%D9%86%D8%B2%D8%AF%D9%87%D9%85---%D8%B3%D8%A7%D8%AF%D9%87-%D9%87%D9%85%DB%8C%D8%B4%D9%87-%D8%A8%D9%87-%D9%85%D8%B9%D9%86%DB%8C-%D9%88%D8%A7%D8%B6%D8%AD-%D9%86%DB%8C%D8%B3%D8%AA-%D9%82%D8%B3%D9%85%D8%AA-%D8%AF%D9%88%D9%85/</guid>
      <description>در پایان مطلب قبلی این سری نوشته‌ها گفتیم که در تست‌های نوشته شده مشکلی وجود دارد. در این مطلب که نسخه زبان انگلیسی آن را در این آدرس می‌توانید مطالعه کنید، به بیان و رفع مشکل می‌پردازیم.
مشکل کجاست؟
در روز چهاردهم این تست کیس را دریافت کردیم:
وقتی کاربری سفارشی به تعداد صفر می‌دهد، خطایی از جنس InvalidOrderException می‌بایست برگردد.
از تست کیس بالا به کد تست زیر رسیدیم:</description>
    </item>
    
    <item>
      <title>۳۰ روز با TDD: روز چهاردهم - ساده همیشه به معنی واضح نیست قسمت اول</title>
      <link>http://elmah.ir/post/113-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%DA%86%D9%87%D8%A7%D8%B1%D8%AF%D9%87%D9%85---%D8%B3%D8%A7%D8%AF%D9%87-%D9%87%D9%85%DB%8C%D8%B4%D9%87-%D8%A8%D9%87-%D9%85%D8%B9%D9%86%DB%8C-%D9%88%D8%A7%D8%B6%D8%AD-%D9%86%DB%8C%D8%B3%D8%AA-%D9%82%D8%B3%D9%85%D8%AA-%D8%A7%D9%88%D9%84/</link>
      <pubDate>Wed, 01 Apr 2015 00:00:00 +0330</pubDate>
      
      <guid>http://elmah.ir/post/113-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%DA%86%D9%87%D8%A7%D8%B1%D8%AF%D9%87%D9%85---%D8%B3%D8%A7%D8%AF%D9%87-%D9%87%D9%85%DB%8C%D8%B4%D9%87-%D8%A8%D9%87-%D9%85%D8%B9%D9%86%DB%8C-%D9%88%D8%A7%D8%B6%D8%AD-%D9%86%DB%8C%D8%B3%D8%AA-%D9%82%D8%B3%D9%85%D8%AA-%D8%A7%D9%88%D9%84/</guid>
      <description>در نوشته‌های قبلی دیدیم که چطور با استفاده از stub ها کد کلاسی وابسته زیر تست را mock کردیم. نوشته انگلیسی روز چهاردهم را در این آدرس می‌توانید مطالعه کنید.
یک روز دیگر، یک تست دیگر برای این نوشته نیز مثال فروشگاه مطالب قبلی را ادامه می‌دهیم. تست بعدی زمانی است که کاربر یک آیتم را سفارش می‌دهد و تعداد سفارش صفر است و InvalidOrderException باید throw شود.
در ظاهر این یک تست ساده به نظر می‌رسد: هر سفارش لیستی از آیتم‌ها دارد اگر تعداد هر یک از آیتم‌ها برابر صفر بود یک exception را throw‌ کن.</description>
    </item>
    
    <item>
      <title>۳۰ روز با TDD: روز سیزدهم - ویژگی‌های بیشتر stub</title>
      <link>http://elmah.ir/post/109-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D8%B3%DB%8C%D8%B2%D8%AF%D9%87%D9%85---%D9%88%DB%8C%DA%98%DA%AF%DB%8C-%D9%87%D8%A7%DB%8C-%D8%A8%DB%8C%D8%B4%D8%AA%D8%B1-stub/</link>
      <pubDate>Wed, 28 Jan 2015 00:00:00 +0330</pubDate>
      
      <guid>http://elmah.ir/post/109-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D8%B3%DB%8C%D8%B2%D8%AF%D9%87%D9%85---%D9%88%DB%8C%DA%98%DA%AF%DB%8C-%D9%87%D8%A7%DB%8C-%D8%A8%DB%8C%D8%B4%D8%AA%D8%B1-stub/</guid>
      <description>در روز دوازدهم با stub ها آشنا شدیم. نوشته روز سیزدهم به زبان انگلیسی را در این آدرس می‌توانید مطالعه کنید.
زمان بازبینی کد من دوست دارم به صورت متناوب با تیم برای بازبینی کدها جلسه داشته باشم. بعضی تیم‌ها زمان‌های برنامه‌ریزی شده برای این کار دارند و بعضی ندارند. یکی از چیزهایی که دوست دارم پایه اصلی جلسات بازبینی کد باشد، بخش‌های مهم برنامه هستند که یا پیجیده‌اند یا بخش‌های زیاد دیگری با آن‌ها در ارتباطند.</description>
    </item>
    
    <item>
      <title>۳۰ روز با TDD: روز دوازدهم - کار با Stub ها</title>
      <link>http://elmah.ir/post/107-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D8%AF%D9%88%D8%A7%D8%B2%D8%AF%D9%87%D9%85---%DA%A9%D8%A7%D8%B1-%D8%A8%D8%A7-stub-%D9%87%D8%A7/</link>
      <pubDate>Sat, 27 Dec 2014 00:00:00 +0330</pubDate>
      
      <guid>http://elmah.ir/post/107-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D8%AF%D9%88%D8%A7%D8%B2%D8%AF%D9%87%D9%85---%DA%A9%D8%A7%D8%B1-%D8%A8%D8%A7-stub-%D9%87%D8%A7/</guid>
      <description>نوشته به زبان انگلیسی روز دوازدهم را در این آدرس می‌توانید مطالعه کنید. در نوشته قبلی این سری یک پروتوتایپ از اینکه PlaceOrder برای یک OrderService در یک برنامه e-commerce چطور باید باشد به شما نشان دادم. برای نمایش mocking ما یک نسخه کاربردی از این منطق تجاری (business logic) را با TDD پیاده‌سازی خواهیم کرد. این به آن معنی است که با یک نیازمندی تجاری شروع می‌کنیم:
تصور کنید که کاربر به برنامه وارد شده (login کرده است) و آیتم‌هایی را در سبد خرید قرار داده است.</description>
    </item>
    
    <item>
      <title>۳۰ روز با TDD: روز یازدهم - درباره Mocking</title>
      <link>http://elmah.ir/post/94-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%DB%8C%D8%A7%D8%B2%D8%AF%D9%87%D9%85---%D8%AF%D8%B1%D8%A8%D8%A7%D8%B1%D9%87-mocking/</link>
      <pubDate>Wed, 24 Sep 2014 00:00:00 +0330</pubDate>
      
      <guid>http://elmah.ir/post/94-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%DB%8C%D8%A7%D8%B2%D8%AF%D9%87%D9%85---%D8%AF%D8%B1%D8%A8%D8%A7%D8%B1%D9%87-mocking/</guid>
      <description>نوشته به زبان انگلیسی روز دهم را در این آدرس می‌توانید مطالعه کنید. هدف آزمون‌های واحد خوب نوشته شده این است که تست‌های شما را ایزوله نگه دارد. این جمله به آن معنی است که اگر حتی کد زیر تست شما، به کلاس یا سرویس خارجی دیگری وابستگی دارد، شما باید بتوانید تستی بنویسید که صرفنظر از آن وابستگی‌ها آنچه در کد کلاس یا متد شماست را تست کند. به نظر غیرممکن می‌‌‌آید؟ در واقع این طور نیست و اگر نوشته مربوط به Dependency Injection را مطالعه کرده باشید، نیمی از جواب را می‌دانید.</description>
    </item>
    
    <item>
      <title>۳۰ روز با TDD: روز دهم - بررسی بیشتر Refactoring‌ و NUnit</title>
      <link>http://elmah.ir/post/89-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D8%AF%D9%87%D9%85---%D8%A8%D8%B1%D8%B1%D8%B3%DB%8C-%D8%A8%DB%8C%D8%B4%D8%AA%D8%B1-refactoring--%D9%88-nunit/</link>
      <pubDate>Sun, 27 Jul 2014 00:00:00 +0330</pubDate>
      
      <guid>http://elmah.ir/post/89-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D8%AF%D9%87%D9%85---%D8%A8%D8%B1%D8%B1%D8%B3%DB%8C-%D8%A8%DB%8C%D8%B4%D8%AA%D8%B1-refactoring--%D9%88-nunit/</guid>
      <description>در نوشته روز نهم، درباره Refactoring صحبت کردیم، نوشته به زبان انگلیسی روز دهم را در این آدرس می‌توانید مطالعه کنید. در روز دهم با امکانات بیشتری در NUnit و همچنین Refactoring آشنا خواهیم شد.
بهترین شمشیرها از هر دو طرف می‌برند نه تنها مهم است که به صورت دوره‌ای کد business logic خودمان را refactor کنیم، بلکه لازم است به صورت دوره‌ای تست‌ها را نیز بررسی کنیم. به یاد داشته باشید که تست‌ها هم نوعی کد هستند و نیازمند نگهداری مشابه.</description>
    </item>
    
    <item>
      <title>۳۰ روز با TDD: روز نهم - مقدمات Refactoring</title>
      <link>http://elmah.ir/post/87-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D9%86%D9%87%D9%85---%D9%85%D9%82%D8%AF%D9%85%D8%A7%D8%AA-refactoring/</link>
      <pubDate>Tue, 29 Apr 2014 17:52:36 +0330</pubDate>
      
      <guid>http://elmah.ir/post/87-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D9%86%D9%87%D9%85---%D9%85%D9%82%D8%AF%D9%85%D8%A7%D8%AA-refactoring/</guid>
      <description>نوشته زبان انگلیسی مربوط به روز نهم را از این آدرس می‌توانید مطالعه کنید. درباره مفهوم Refactoring در ادامه توضیح خواهم داد.
زمانی برای بازبینی کد (Code Review) درنوشته قبلی از این سری نوشته‌ها درباره defect ها صحبت کردیم. آخرین کدی که نوشتیم این بود:
 نقصی که برطرفش کردیم این بود که کاربر می‌توانست یک رشته دو حرفی را به عنوان پارامتر دوم به تابع FindNumberOfOccurences ارسال کند و exception ای از نوع FormatException بگیرد.</description>
    </item>
    
    <item>
      <title>۳۰ روز با TDD: روز هشتم: برخورد با defect ها</title>
      <link>http://elmah.ir/post/85-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D9%87%D8%B4%D8%AA%D9%85--%D8%A8%D8%B1%D8%AE%D9%88%D8%B1%D8%AF-%D8%A8%D8%A7-defect-%D9%87%D8%A7/</link>
      <pubDate>Wed, 26 Feb 2014 15:42:43 +0330</pubDate>
      
      <guid>http://elmah.ir/post/85-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D9%87%D8%B4%D8%AA%D9%85--%D8%A8%D8%B1%D8%AE%D9%88%D8%B1%D8%AF-%D8%A8%D8%A7-defect-%D9%87%D8%A7/</guid>
      <description>نوشته به زبان انگلیسی روز هشتم را در این آدرس می‌توانید مطالعه کنید. قبل از شروع لازم است درباره موضوع امروز یعنی defect و تفاوت آن با bug نکته‌ای را عرض کنم. defect که شاید بتوان آن را نقص ترجمه کرد در واقع انحراف از نیازمندی‌های نرم‌افزار است و bug نتیجه خطا در کدنویسی، اینجا را ببینید.
defect بد در نرم‌افزار خوب مهم نیست که چقدر خوب کد بنویسید و چقدر پیاده‌سازی نیازمندی‌های اصلی را دنبال کرده‌اید و مهم نیست که چقدر نرم‌افزارتان را تست کرده‌اید، defect ها یک واقعیت در دنیای نرم‌افزار هستند.</description>
    </item>
    
    <item>
      <title>۳۰ روز با TDD: روز هفتم - Software Factories و DI Frameworks</title>
      <link>http://elmah.ir/post/84-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D9%87%D9%81%D8%AA%D9%85---software-factories-%D9%88-di-frameworks/</link>
      <pubDate>Thu, 13 Feb 2014 10:53:53 +0330</pubDate>
      
      <guid>http://elmah.ir/post/84-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D9%87%D9%81%D8%AA%D9%85---software-factories-%D9%88-di-frameworks/</guid>
      <description>قبل از هر چیز، نوشته زبان انگلیسی روز هفتم را در این آدرس می‌توانید مطالعه کنید. لازم است یادآوری کنم معتقدم در کار برنامه‌نویسی تا حد امکان نباید عبارات تخصصی را ترجمه کرد (مثل ترجمه کردن نام داروها و ترکیبات شیمیایی آن‌ها در پزشکی) مگر اینکه معادل مناسبی برای آن‌ها وجود داشته باشد. در مورد نوشته امروز هم این نکته صادق است.
اگر مشکل را نبینم پس مشکلی نیست. درسته؟ تزریق وابستگی (DI) یک تکنیک برای تولید برنامه‌های با پیوند ضعیف به وابستگی‌ها (loosely bound dependencies) هست.</description>
    </item>
    
    <item>
      <title>۳۰ روز با TDD: روز ششم - تزریق وابستگی (Dependency Injection) چیست؟</title>
      <link>http://elmah.ir/post/83-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D8%B4%D8%B4%D9%85---%D8%AA%D8%B2%D8%B1%DB%8C%D9%82-%D9%88%D8%A7%D8%A8%D8%B3%D8%AA%DA%AF%DB%8C-dependency-injection-%DA%86%DB%8C%D8%B3%D8%AA/</link>
      <pubDate>Fri, 07 Feb 2014 23:18:26 +0330</pubDate>
      
      <guid>http://elmah.ir/post/83-%DB%B3%DB%B0-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D8%B4%D8%B4%D9%85---%D8%AA%D8%B2%D8%B1%DB%8C%D9%82-%D9%88%D8%A7%D8%A8%D8%B3%D8%AA%DA%AF%DB%8C-dependency-injection-%DA%86%DB%8C%D8%B3%D8%AA/</guid>
      <description>نوشته به زبان انگلیسی روز ششم را در این آدرس می‌توانید مشاهده کنید. در روز پنجم درباره اصل Dependency Inversion گفتم و اینکه با Dependency Injection یا تزریق وابستگی متفاوت است. امروز می‌خواهیم بیشتر درباره تزریق وابستگی صحبت کنیم.
Tinker Toy و Lego همان‌طور که قبلاً هم در این سری نوشته‌ها گفتم، اتصال (Coupling) و انقیاد (binding) در نرم‌افزار یک حقیقت است. به عنوان برنامه‌نویس سعی می‌کنیم که اتصالات برنامه‌مان تا حد ممکن ضعیف باشد (به اصطلاح loosely coupled باشد) اما در نهایت برای اینکه اجزای مختلف برنامه‌ای که می‌سازیم قابل استفاده باشد باید آن‌ها را bind کنیم.</description>
    </item>
    
    <item>
      <title>30 روز با TDD: روز پنجم - کد SOLID ایجاد کنید</title>
      <link>http://elmah.ir/post/82-30-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D9%BE%D9%86%D8%AC%D9%85---%DA%A9%D8%AF-solid-%D8%A7%DB%8C%D8%AC%D8%A7%D8%AF-%DA%A9%D9%86%DB%8C%D8%AF/</link>
      <pubDate>Thu, 06 Feb 2014 12:41:32 +0330</pubDate>
      
      <guid>http://elmah.ir/post/82-30-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D9%BE%D9%86%D8%AC%D9%85---%DA%A9%D8%AF-solid-%D8%A7%DB%8C%D8%AC%D8%A7%D8%AF-%DA%A9%D9%86%DB%8C%D8%AF/</guid>
      <description>نوشته روز پنجم به زبان انگلیسی را در این آدرس می‌توانید مطالعه کنید. در روز سوم اولین تست‌مان را نوشتم و در روز چهارم هم مطابق با روش TDD کدمان را تکمیل کردیم تا اولین تستی که نوشته بودیم Pass شود. امروز می‌خواهیم کمی درباره مباحث تئوریکی که پایه کارهای آینده در این سری نوشته‌هاست صحبت کنیم.
آیا کد شما SOLID است؟ اصول SOLID در توسعه نرم‌افزار اصولی هستند که توسط رابرت مارتین معرفی شده‌اند.</description>
    </item>
    
    <item>
      <title>30 روز با TDD: روز چهارم - Pass کردن اولین تست</title>
      <link>http://elmah.ir/post/81-30-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%DA%86%D9%87%D8%A7%D8%B1%D9%85---pass-%DA%A9%D8%B1%D8%AF%D9%86-%D8%A7%D9%88%D9%84%DB%8C%D9%86-%D8%AA%D8%B3%D8%AA/</link>
      <pubDate>Mon, 03 Feb 2014 14:42:53 +0330</pubDate>
      
      <guid>http://elmah.ir/post/81-30-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%DA%86%D9%87%D8%A7%D8%B1%D9%85---pass-%DA%A9%D8%B1%D8%AF%D9%86-%D8%A7%D9%88%D9%84%DB%8C%D9%86-%D8%AA%D8%B3%D8%AA/</guid>
      <description>نوشته زبان انگلیسی را در این آدرس می‌توانید مشاهده کنید. در روز سوم، اولین تست‌مان را نوشتیم. هدف این بود:
&amp;ldquo;یک متد بنویسید که یک جمله و یک کاراکتر را به عنوان ورودی دریافت کند و عددی را برگرداند که مشخص کند آن کاراکتر چند بار در آن جمله استفاده شده است&amp;rdquo;
کدی در پایان نوشته روز سوم، داشتیم کد زیر بود. در این کد فقط متد مربوط به تست را نوشتیم و امروز کاری خواهیم کرد که این تست Pass شود.</description>
    </item>
    
    <item>
      <title>30 روز با TDD: روز سوم - اولین تست شما</title>
      <link>http://elmah.ir/post/80-30-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D8%B3%D9%88%D9%85---%D8%A7%D9%88%D9%84%DB%8C%D9%86-%D8%AA%D8%B3%D8%AA-%D8%B4%D9%85%D8%A7/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0330</pubDate>
      
      <guid>http://elmah.ir/post/80-30-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D8%B3%D9%88%D9%85---%D8%A7%D9%88%D9%84%DB%8C%D9%86-%D8%AA%D8%B3%D8%AA-%D8%B4%D9%85%D8%A7/</guid>
      <description>نوشته انگلیسی مربوط به روز سوم را در این آدرس می‌توانید بخوانید. امروز می‌خواهیم آستین‌ها را بالا بزنیم و اولین تست خودمان را بنویسیم. قبل از شروع لازم است به برخی ابزارها و نرم‌افزارهایی که به آن‌ها در طول این دوره 30 روزه TDD احتیاج پیدا می‌کنیم نگاهی داشته باشیم.
اولین و مهترین ابزاری که به آن نیاز داریم Visual Studio هست. من از نسخه 2013 ویژوال استودیو برای مثال‌های این سری نوشته استفاده می‌کنم.</description>
    </item>
    
    <item>
      <title>30 روز با TDD: روز دوم‌ - مروری بر اصول شی‌گرایی</title>
      <link>http://elmah.ir/post/79-30-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D8%AF%D9%88%D9%85----%D9%85%D8%B1%D9%88%D8%B1%DB%8C-%D8%A8%D8%B1-%D8%A7%D8%B5%D9%88%D9%84-%D8%B4%DB%8C-%DA%AF%D8%B1%D8%A7%DB%8C%DB%8C/</link>
      <pubDate>Thu, 30 Jan 2014 13:42:56 +0330</pubDate>
      
      <guid>http://elmah.ir/post/79-30-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D8%AF%D9%88%D9%85----%D9%85%D8%B1%D9%88%D8%B1%DB%8C-%D8%A8%D8%B1-%D8%A7%D8%B5%D9%88%D9%84-%D8%B4%DB%8C-%DA%AF%D8%B1%D8%A7%DB%8C%DB%8C/</guid>
      <description>نوشته اصلی را در این آدرس می‌توانید مطالعه کنید، سعی من این هست که فقط بخش‌های مهم و مفید رو ترجمه کنم، همچنین عباراتی تخصصی رو تا حد ممکن ترجمه نکنم مگر اینکه معادل مناسبی به زبان فارسی براش وجود داشته باشه.
در نوشته امروز مرور مختصری خواهیم داشت بر اصول برنامه‌نویسی شی‌گرا (OOP یا Object Oriented Programming). حتی اگر برنامه‌نویس با سابقه و با تجربه‌ای هستید باز هم توصیه می‌کنم حداقل بخش‌های مربوط به Polymorphism و Interface ها را مطالعه کنید چرا که این مباحث معمولاً خیلی اشتباه فهمیده می‌شوند و البته بخش مهمی از کار TDD را تشکیل می‌دهند.</description>
    </item>
    
    <item>
      <title>30 روز با TDD: روز اول - TDD چیست و چرا باید از آن استفاده کنم؟</title>
      <link>http://elmah.ir/post/78-30-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D8%A7%D9%88%D9%84---tdd-%DA%86%DB%8C%D8%B3%D8%AA-%D9%88-%DA%86%D8%B1%D8%A7-%D8%A8%D8%A7%DB%8C%D8%AF-%D8%A7%D8%B2-%D8%A2%D9%86-%D8%A7%D8%B3%D8%AA%D9%81%D8%A7%D8%AF%D9%87-%DA%A9%D9%86%D9%85/</link>
      <pubDate>Tue, 28 Jan 2014 21:19:17 +0330</pubDate>
      
      <guid>http://elmah.ir/post/78-30-%D8%B1%D9%88%D8%B2-%D8%A8%D8%A7-tdd--%D8%B1%D9%88%D8%B2-%D8%A7%D9%88%D9%84---tdd-%DA%86%DB%8C%D8%B3%D8%AA-%D9%88-%DA%86%D8%B1%D8%A7-%D8%A8%D8%A7%DB%8C%D8%AF-%D8%A7%D8%B2-%D8%A2%D9%86-%D8%A7%D8%B3%D8%AA%D9%81%D8%A7%D8%AF%D9%87-%DA%A9%D9%86%D9%85/</guid>
      <description>داستان چیه؟ سپتامبر سال گذشته آقای James Bender در وبلا‌گ‌های تلریک یک مجموعه نوشته منتشر کرد به نام 30 روز با TDD. من می‌خوام یک ترجمه آزاد از این نوشته‌ها براتون داشته باشم تا با هم درباره Test Driven Development بیشتر بدونیم. اگر نمی‌دونید داستان TDD چی هست نگران نباشید، این مجموعه نوشته‌ها برای همین هست که با این روش بیشتر آشنا بشیم ;)
در هر نوشته، لینکی به مطلب اصلی هم خواهم داد که اگر خواستید متن رو به زبان انگلیسی مطالعه کنید راحت باشید و ممکنه در بعضی نوشته‌ها علاوه بر متن اصلی (که معمولاً خلاصه می‌شه و نکات مهمش ترجمه می‌شه) مطالب اضافه‌تری که از تجربه خودم یا دیگران هست رو هم اضافه کنم.</description>
    </item>
    
  </channel>
</rss>